<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OmvueB786v8AfBO80Vf4eQ8AAAAASUVORK5CYII=
</value>
  </data>
</root>